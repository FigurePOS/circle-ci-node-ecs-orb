description: >
  Deploy terraform to dev.

parameters:
  account_id:
    type: string
    description: "AWS Account ID"
  deploy:
    type: env_var_name
    default: DEPLOY_TF
  dir:
    type: string
    default: "tf"
    description: "Directory of terraform scripts"

steps:
  - run:
      name: Terraform Init
      environment:
        ACCOUNT_ID: <<parameters.account_id>>
        DIR: <<parameters.dir>>
        ENV: "development"
        ROLE_NAME: "TerraformDeployer"
        SCRIPT_ASSUME: <<include(scripts/aws-assume.sh)>>
        SCRIPT_SET_VARS: <<include(scripts/set-variables.sh)>>
      command: <<include(scripts/terraform-init.sh)>>
  - run:
      name: Terraform Format
      environment:
        DIR: <<parameters.dir>>
      command: |
        cd $DIR
        terraform fmt
  - run:
      name: Terraform Plan
      environment:
        AWS_ACCESS_KEY_ID: ""
        AWS_SECRET_ACCESS_KEY: ""
        DIR: <<parameters.dir>>
        TF_VAR_aws_profile: "assumed-role"
        TF_VAR_env: "development"
      command: <<include(scripts/terraform-plan.sh)>>
  - when:
      condition:
        equal: [ true, "${<< parameters.deploy >>}" ]
      steps:
        - run:
            name: Terraform Deploy
            environment:
              AWS_ACCESS_KEY_ID: ""
              AWS_SECRET_ACCESS_KEY: ""
              DIR: <<parameters.dir>>
              TF_VAR_aws_profile: "assumed-role"
              TF_VAR_env: "development"
            command: |
              cd $DIR
              terraform apply --auto-approve tfplan.binary
